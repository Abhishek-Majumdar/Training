package com.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import com.beans.Book;
import com.connections.MyConnection;
import com.pojos.Department;

public class BookDAOImpl implements BookDAO {

	@Override
	public boolean addBook(Book book) {
		// TODO Auto-generated method stub
		String ADD_BOOK = "insert into BOOK values (?,?,?,?)";
		boolean flag = false;
		int count =0;
		try {
			PreparedStatement ps = MyConnection.getMyConnection().prepareStatement(ADD_BOOK);
			
			ps.setInt(1, book.getIsbn());
			ps.setString(2, book.getName());
			ps.setString(3,book.getPublication());
			ps.setString(4,book.getAuthor());
			
			count = ps.executeUpdate();			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		if(count > 0)
			return true;
		else
			return false;
	}

	@Override
	public int updateBook(Book book, int ISBN) {
		// TODO Auto-generated method stub
//		Book book_l = new Book();
		String UPDATE_BOOK = "update BOOK set NAME = ?, PUBL = ?, AUTH = ? where ISBN = ? ";
		int rows = 0;
		PreparedStatement ps;
		try {
			ps = MyConnection.getMyConnection().prepareStatement(UPDATE_BOOK);
			ps.setString(1, book.getName());
			ps.setString(2, book.getPublication());
			ps.setString(3, book.getAuthor());
			ps.setInt(4, ISBN);
			
			rows = ps.executeUpdate();
//			if(rows > 0) {
//				book_l = findBookByISBN(book.getIsbn());
//			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return rows;
	}

	@Override
	public int deleteBook(int ISBN) {
		// TODO Auto-generated method stub
		String DELETE_BOOK = "delete from BOOK NAME, PUBL, AUTH, ISBN where ISBN = ? ";
		int rows = 0;
		PreparedStatement ps;
		
		try {
			ps = MyConnection.getMyConnection().prepareStatement(DELETE_BOOK);
			ps.setInt(1, ISBN);
			rows = ps.executeUpdate();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return rows;
	}

	@Override
	public Book findBookByISBN(int ISBN) {
		// TODO Auto-generated method stub
		Book book_l = new Book();
		String FIND_BOOK = "select * from BOOK where ISBN = ? ";
		PreparedStatement ps;
		try {
			ps = MyConnection.getMyConnection().prepareStatement(FIND_BOOK);
			ps.setInt(1, ISBN);
			
			ResultSet books = ps.executeQuery();
			
			while(books.next())
			{
				book_l = new Book(books.getInt("ISBN"),books.getString("NAME"),books.getString("PUBL"),books.getString("AUTH"));
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return book_l;
	}
	

	@Override
	public List<Book> findBooksByName(String name) {
		// TODO Auto-generated method stub
		List <Book> books = new ArrayList<>();
		
		String LIST_BOOKS = "select * from BOOK where NAME = ?";
		PreparedStatement ps;
		try {
			ps = MyConnection.getMyConnection().prepareStatement(LIST_BOOKS);
			ps.setString(1, name);
			ResultSet set = ps.executeQuery();
			while(set.next())
			{
				int ISBN = set.getInt(1);
				String Name = set.getString(2);
				String Publ = set.getString(3);
				String Auth = set.getString(4);
				Book book = new Book(ISBN, Name, Publ, Auth);
				
				books.add(book);
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return books;
	}

	@Override
	public List<Book> findAllBooks() {
		// TODO Auto-generated method stub
		List <Book> books = new ArrayList<>();
		
		String LIST_BOOKS = "select * from BOOK";
		PreparedStatement ps;
		try {
			ps = MyConnection.getMyConnection().prepareStatement(LIST_BOOKS);
			ResultSet set = ps.executeQuery();
			while(set.next())
			{
				int ISBN = set.getInt(1);
				String Name = set.getString(2);
				String Publ = set.getString(3);
				String Auth = set.getString(4);
				Book book = new Book(ISBN, Name, Publ, Auth);
				
				books.add(book);
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return books;
	}

	@Override
	public List<Book> findBooksByAuthor(String auth_name) {
		// TODO Auto-generated method stub
		List <Book> books = new ArrayList<>();
		
		String LIST_BOOKS = "select * from BOOK where NAME = ?";
		PreparedStatement ps;
		try {
			ps = MyConnection.getMyConnection().prepareStatement(LIST_BOOKS);
			ps.setString(1, name);
			ResultSet set = ps.executeQuery();
			while(set.next())
			{
				int ISBN = set.getInt(1);
				String Name = set.getString(2);
				String Publ = set.getString(3);
				String Auth = set.getString(4);
				Book book = new Book(ISBN, Name, Publ, Auth);
				
				books.add(book);
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return books;
	}

}
